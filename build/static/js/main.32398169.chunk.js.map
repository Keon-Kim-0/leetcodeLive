{"version":3,"sources":["components/Chat.js","components/Home.js","App.js","index.js"],"names":["Chat","useEffect","sock","io","clientid","document","getElementById","addEventListener","e","preventDefault","talk","value","split","map","x","xi","join","slice","length","console","log","emit","reset","chatSend","messengerid","on","text","right","container","scrolly","scrollHeight","scrollTop","clientHeight","scrollTo","top","behavior","window","style","paddingBottom","parent","querySelector","el","createElement","className","innerHTML","appendChild","stepParent","messenger","insertBefore","childNodes","id","class","type","autocomplete","placeholder","Home","hot","ReactDOM","render"],"mappings":"wMAKe,SAASA,IAiGtB,OAhGAC,qBAAU,WACR,IAAMC,EAAOC,eACTC,GAAW,EACIC,SAASC,eAAe,OAC1BD,SAASC,eAAe,YAEhCC,iBAAiB,UAAU,SAAUC,GAC5CA,EAAEC,iBAIJ,WACE,IAAIC,EAAOL,SAASC,eAAe,QAAQK,MAC3CD,GAAQN,EAAW,IAAMM,GAAME,MAAM,IAAIC,KAAI,SAACC,EAAGC,GAC/C,OAAIA,EAAK,GAAKA,EAAK,KAAO,EACjBD,EAAI,KAEJA,KAERE,KAAK,IAAIC,MAAMb,EAASc,OAAS,GACpCC,QAAQC,IAAIV,GACZR,EAAKmB,KAAK,OAAQX,GAClBL,SAASC,eAAe,YAAYgB,QAdpCC,MAgBF,IAAIC,EAAc,QAClBtB,EAAKuB,GAAG,aAAa,SAACC,GACpBF,EAAcE,KAGhB,IAiBIC,EAAQtB,SAASC,eAAe,SAEhCsB,GADSvB,SAASC,eAAe,UACrBD,SAASC,eAAe,cAUxC,SAASuB,IACHF,EAAMG,cAAgBH,EAAMI,UAAYJ,EAAMK,cAAgB,KAChEL,EAAMM,SAAS,CACbC,IAAKP,EAAMG,aACXK,SAAU,WAZhBC,OAAO7B,iBAAiB,UACxB,WACEoB,EAAQtB,SAASC,eAAe,SACvBD,SAASC,eAAe,UACjCsB,EAAYvB,SAASC,eAAe,aACpCa,QAAQC,IAAI,YAAaQ,EAAUS,MAAMC,kBAkC3CpC,EAAKuB,GAAG,gBAtBU,SAACC,GACjB,IAAMa,EAASlC,SAASmC,cAAc,WAChCC,EAAKpC,SAASqC,cAAc,MAClCD,EAAGE,UAAY,eACfF,EAAGG,UAAYlB,EACfa,EAAOM,YAAYJ,GACnBZ,OAiBF3B,EAAKuB,GAAG,WA7DW,SAACC,GAClB,IAAMa,EAASlC,SAASmC,cAAc,WAChCC,EAAKpC,SAASqC,cAAc,MAClCD,EAAGE,UAAY,WACfF,EAAGG,UAAYlB,EACfa,EAAOM,YAAYJ,GACnB,IAAMK,EAAaL,EACbM,EAAY1C,SAASqC,cAAc,QACzCK,EAAUJ,UAAY,YACtBI,EAAUH,UAAYpB,EACtBsB,EAAWE,aAAaD,EAAWD,EAAWG,WAAW,IAGzD9B,QAAQC,IAAI,OACZS,OAgDF3B,EAAKuB,GAAG,MAfS,SAACC,GAChBtB,EAAWsB,EAEGrB,SAASC,eAAe,cAC9BsC,UAAY,cAAgBlB,KAYtCxB,EAAKuB,GAAG,cATiB,SAACC,GAEVrB,SAASC,eAAe,cAC9BsC,UAAYlB,OAOrB,IAID,sBAAKwB,GAAG,QAAR,UACE,oBAAIA,GAAG,aAAaC,MAAM,eAC1B,oBAAID,GAAG,aAAaC,MAAM,eAC1B,qBAAKD,GAAG,YAAYC,MAAM,SAA1B,SACE,oBAAID,GAAG,SAASC,MAAM,WAExB,qBAAKA,MAAM,cAAX,SACE,uBAAMD,GAAG,WAAWC,MAAM,WAA1B,UACE,uBAAOD,GAAG,OAAOE,KAAK,OAAOC,aAAa,MAAMF,MAAM,UAAUG,YAAY,SAC5E,wBAAQJ,GAAG,MAAMC,MAAM,aAAvB,0BC7GK,SAASI,IACtB,OACE,8BACE,cAACvD,EAAD,MCGN,IAUewD,iBAVH,WAER,OACI,sBAAKN,GAAG,SAAR,UACI,6CACA,cAACK,EAAD,UCNZE,IAASC,OAAO,cAAC,EAAD,IAASrD,SAASC,eAAe,W","file":"static/js/main.32398169.chunk.js","sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client'\r\n\r\n\r\nexport default function Chat() {\r\n  useEffect(() => {\r\n    const sock = io();\r\n    let clientid = false\r\n    const chatButton = document.getElementById('say')\r\n    const chatForm = document.getElementById('chatForm')\r\n\r\n    chatForm.addEventListener('submit', function (e) {\r\n      e.preventDefault();\r\n      chatSend();\r\n    })\r\n\r\n    function chatSend() {\r\n      let talk = document.getElementById('chat').value\r\n      talk = (clientid + ':' + talk).split('').map((x, xi) => {\r\n        if (xi > 0 && xi % 28 === 0) {\r\n          return x + '\\n'\r\n        } else {\r\n          return x\r\n        }\r\n      }).join('').slice(clientid.length + 1)\r\n      console.log(talk);\r\n      sock.emit('chat', talk);\r\n      document.getElementById('chatForm').reset();\r\n    }\r\n    let messengerid = 'error';\r\n    sock.on('messenger', (text) => {\r\n      messengerid = text\r\n    })\r\n\r\n    const writeEvent = (text) => {\r\n      const parent = document.querySelector('#events');\r\n      const el = document.createElement('li');\r\n      el.className = 'chatText'\r\n      el.innerHTML = text;\r\n      parent.appendChild(el)\r\n      const stepParent = el;\r\n      const messenger = document.createElement('span');\r\n      messenger.className = 'messenger'\r\n      messenger.innerHTML = messengerid\r\n      stepParent.insertBefore(messenger, stepParent.childNodes[0]);\r\n      //messenger.scrollIntoView({behavior:\"smooth\", block: \"end\", inline: \"nearest\"});\r\n      //window.scrollTo(0,document.body.scrollHeight)\r\n      console.log('one')\r\n      scrolly()\r\n    };\r\n\r\n    let right = document.getElementById('right')\r\n    let events = document.getElementById('events')\r\n    let container = document.getElementById('container')\r\n\r\n    window.addEventListener('resize', update);\r\n    function update() {\r\n      right = document.getElementById('right')\r\n      events = document.getElementById('events')\r\n      container = document.getElementById('container')\r\n      console.log('updated: ', container.style.paddingBottom)\r\n    }\r\n\r\n    function scrolly() {\r\n      if (right.scrollHeight - (right.scrollTop + right.clientHeight) < 100) {\r\n        right.scrollTo({\r\n          top: right.scrollHeight,\r\n          behavior: 'smooth',\r\n        })\r\n      }\r\n    }\r\n\r\n    const blueEvent = (text) => {\r\n      const parent = document.querySelector('#events')\r\n      const el = document.createElement('li')\r\n      el.className = 'announcement'\r\n      el.innerHTML = text;\r\n      parent.appendChild(el);\r\n      scrolly()\r\n    };\r\n\r\n    const createid = (text) => {\r\n      clientid = text\r\n      //console.log(clientid)\r\n      let element = document.getElementById('clientName')\r\n      element.innerHTML = 'your name: ' + text\r\n    }\r\n\r\n    const updatePopulation = (text) => {\r\n      //console.log('beep')\r\n      let element = document.getElementById('population')\r\n      element.innerHTML = text\r\n    }\r\n\r\n    sock.on('announcement', blueEvent);\r\n    sock.on('message', writeEvent);\r\n    sock.on('id', createid)\r\n    sock.on('population', updatePopulation)\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div id=\"right\">\r\n      <h2 id='population' class='population'></h2>\r\n      <h2 id='clientName' class='clientName'></h2>\r\n      <div id='container' class='Anchor'>\r\n        <ul id=\"events\" class='chat'></ul>\r\n      </div>\r\n      <div class=\"chatSection\">\r\n        <form id='chatForm' class='chatForm'>\r\n          <input id='chat' type=\"text\" autocomplete=\"off\" class=\"chatbox\" placeholder=\"chat\" />\r\n          <button id=\"say\" class=\"chatButton\">Send</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport Chat from './Chat';\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div>\r\n      <Chat />\r\n    </div>\r\n  );\r\n}","\r\nimport { hot } from 'react-hot-loader/root';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, NavLink } from 'react-router-dom';\r\nimport \"./styles.css\";\r\n\r\nimport Login from \"./components/Login\";\r\nimport Home from \"./components/Home\";\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <div id='AppDiv'>\r\n            <h1>cicd test 1</h1>\r\n            <Home />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default hot(App);\r\n","\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}