[{"H:\\Deploy stuff\\Leetcode Live\\Leetcode-Live\\src\\index.js":"1","H:\\Deploy stuff\\Leetcode Live\\Leetcode-Live\\src\\App.js":"2","H:\\Deploy stuff\\Leetcode Live\\Leetcode-Live\\src\\components\\Login.js":"3","H:\\Deploy stuff\\Leetcode Live\\Leetcode-Live\\src\\components\\Home.js":"4","H:\\Deploy stuff\\Leetcode Live\\Leetcode-Live\\src\\components\\Chat.js":"5"},{"size":151,"mtime":1623854397011,"results":"6","hashOfConfig":"7"},{"size":446,"mtime":1623877531814,"results":"8","hashOfConfig":"7"},{"size":391,"mtime":1623857453580,"results":"9","hashOfConfig":"7"},{"size":175,"mtime":1623854012124,"results":"10","hashOfConfig":"7"},{"size":3655,"mtime":1623879857494,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14y2bgw",{"filePath":"14","messages":"15","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"H:\\Deploy stuff\\Leetcode Live\\Leetcode-Live\\src\\index.js",[],"H:\\Deploy stuff\\Leetcode Live\\Leetcode-Live\\src\\App.js",["26","27","28","29","30","31","32"],"\nimport { hot } from 'react-hot-loader/root';\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, NavLink } from 'react-router-dom';\nimport \"./styles.css\";\n\nimport Login from \"./components/Login\";\nimport Home from \"./components/Home\";\n\nconst App = () => {\n\n    return (\n        <div id='AppDiv'>\n            {/* <Login /> */}\n            <Home />\n        </div>\n    );\n}\n\nexport default hot(App);\n","H:\\Deploy stuff\\Leetcode Live\\Leetcode-Live\\src\\components\\Login.js",["33","34","35","36","37","38"],"import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, NavLink } from 'react-router-dom';\r\n\r\nexport default function Login() {\r\n  return (\r\n    <div id='loginModal'>\r\n      <div class='long'><h2>Username</h2><input id='username'></input></div>\r\n      <div class='long'><h2>Password</h2><input id='password'></input></div>\r\n    </div>\r\n  );\r\n}\r\n","H:\\Deploy stuff\\Leetcode Live\\Leetcode-Live\\src\\components\\Home.js",["39","40"],"import React, { useEffect, useState } from 'react';\r\nimport Chat from './Chat';\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div>\r\n      <Chat />\r\n    </div>\r\n  );\r\n}","H:\\Deploy stuff\\Leetcode Live\\Leetcode-Live\\src\\components\\Chat.js",["41","42","43","44","45"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client'\r\n\r\n\r\nexport default function Chat() {\r\n  useEffect(() => {\r\n    const sock = io();\r\n    let clientid = false\r\n    const chatButton = document.getElementById('say')\r\n    const chatForm = document.getElementById('chatForm')\r\n\r\n    chatForm.addEventListener('submit', function (e) {\r\n      e.preventDefault();\r\n      chatSend();\r\n    })\r\n\r\n    function chatSend() {\r\n      let talk = document.getElementById('chat').value\r\n      talk = (clientid + ':' + talk).split('').map((x, xi) => {\r\n        if (xi > 0 && xi % 28 === 0) {\r\n          return x + '\\n'\r\n        } else {\r\n          return x\r\n        }\r\n      }).join('').slice(clientid.length + 1)\r\n      console.log(talk);\r\n      sock.emit('chat', talk);\r\n      document.getElementById('chatForm').reset();\r\n    }\r\n    let messengerid = 'error';\r\n    sock.on('messenger', (text) => {\r\n      messengerid = text\r\n    })\r\n\r\n    const writeEvent = (text) => {\r\n      const parent = document.querySelector('#events');\r\n      const el = document.createElement('li');\r\n      el.className = 'chatText'\r\n      el.innerHTML = text;\r\n      parent.appendChild(el)\r\n      const stepParent = el;\r\n      const messenger = document.createElement('span');\r\n      messenger.className = 'messenger'\r\n      messenger.innerHTML = messengerid\r\n      stepParent.insertBefore(messenger, stepParent.childNodes[0]);\r\n      //messenger.scrollIntoView({behavior:\"smooth\", block: \"end\", inline: \"nearest\"});\r\n      //window.scrollTo(0,document.body.scrollHeight)\r\n      console.log('one')\r\n      scrolly()\r\n    };\r\n\r\n    let right = document.getElementById('right')\r\n    let events = document.getElementById('events')\r\n    let container = document.getElementById('container')\r\n\r\n    window.addEventListener('resize', update);\r\n    function update() {\r\n      right = document.getElementById('right')\r\n      events = document.getElementById('events')\r\n      container = document.getElementById('container')\r\n      console.log('updated: ', container.style.paddingBottom)\r\n    }\r\n\r\n    function scrolly() {\r\n      if (right.scrollHeight - (right.scrollTop + right.clientHeight) < 100) {\r\n        right.scrollTo({\r\n          top: right.scrollHeight,\r\n          behavior: 'smooth',\r\n        })\r\n      }\r\n    }\r\n\r\n    const blueEvent = (text) => {\r\n      const parent = document.querySelector('#events')\r\n      const el = document.createElement('li')\r\n      el.className = 'announcement'\r\n      el.innerHTML = text;\r\n      parent.appendChild(el);\r\n      scrolly()\r\n    };\r\n\r\n    const createid = (text) => {\r\n      clientid = text\r\n      //console.log(clientid)\r\n      let element = document.getElementById('clientName')\r\n      element.innerHTML = 'your name: ' + text\r\n    }\r\n\r\n    const updatePopulation = (text) => {\r\n      //console.log('beep')\r\n      let element = document.getElementById('population')\r\n      element.innerHTML = text\r\n    }\r\n\r\n    sock.on('announcement', blueEvent);\r\n    sock.on('message', writeEvent);\r\n    sock.on('id', createid)\r\n    sock.on('population', updatePopulation)\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div id=\"right\">\r\n      <h2 id='population' class='population'></h2>\r\n      <h2 id='clientName' class='clientName'></h2>\r\n      <div id='container' class='Anchor'>\r\n        <ul id=\"events\" class='chat'></ul>\r\n      </div>\r\n      <div class=\"chatSection\">\r\n        <form id='chatForm' class='chatForm'>\r\n          <input id='chat' type=\"text\" autocomplete=\"off\" class=\"chatbox\" placeholder=\"chat\" />\r\n          <button id=\"say\" class=\"chatButton\">Send</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n",{"ruleId":"46","severity":1,"message":"47","line":3,"column":17,"nodeType":"48","messageId":"49","endLine":3,"endColumn":26},{"ruleId":"46","severity":1,"message":"50","line":3,"column":28,"nodeType":"48","messageId":"49","endLine":3,"endColumn":36},{"ruleId":"46","severity":1,"message":"51","line":4,"column":27,"nodeType":"48","messageId":"49","endLine":4,"endColumn":33},{"ruleId":"46","severity":1,"message":"52","line":4,"column":35,"nodeType":"48","messageId":"49","endLine":4,"endColumn":41},{"ruleId":"46","severity":1,"message":"53","line":4,"column":43,"nodeType":"48","messageId":"49","endLine":4,"endColumn":48},{"ruleId":"46","severity":1,"message":"54","line":4,"column":50,"nodeType":"48","messageId":"49","endLine":4,"endColumn":57},{"ruleId":"46","severity":1,"message":"55","line":7,"column":8,"nodeType":"48","messageId":"49","endLine":7,"endColumn":13},{"ruleId":"46","severity":1,"message":"47","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":26},{"ruleId":"46","severity":1,"message":"50","line":1,"column":28,"nodeType":"48","messageId":"49","endLine":1,"endColumn":36},{"ruleId":"46","severity":1,"message":"51","line":2,"column":27,"nodeType":"48","messageId":"49","endLine":2,"endColumn":33},{"ruleId":"46","severity":1,"message":"52","line":2,"column":35,"nodeType":"48","messageId":"49","endLine":2,"endColumn":41},{"ruleId":"46","severity":1,"message":"53","line":2,"column":43,"nodeType":"48","messageId":"49","endLine":2,"endColumn":48},{"ruleId":"46","severity":1,"message":"54","line":2,"column":50,"nodeType":"48","messageId":"49","endLine":2,"endColumn":57},{"ruleId":"46","severity":1,"message":"47","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":26},{"ruleId":"46","severity":1,"message":"50","line":1,"column":28,"nodeType":"48","messageId":"49","endLine":1,"endColumn":36},{"ruleId":"46","severity":1,"message":"50","line":2,"column":28,"nodeType":"48","messageId":"49","endLine":2,"endColumn":36},{"ruleId":"46","severity":1,"message":"56","line":10,"column":11,"nodeType":"48","messageId":"49","endLine":10,"endColumn":21},{"ruleId":"46","severity":1,"message":"57","line":54,"column":9,"nodeType":"48","messageId":"49","endLine":54,"endColumn":15},{"ruleId":"58","severity":1,"message":"59","line":105,"column":7,"nodeType":"60","endLine":105,"endColumn":46},{"ruleId":"58","severity":1,"message":"59","line":106,"column":7,"nodeType":"60","endLine":106,"endColumn":46},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'NavLink' is defined but never used.","'Login' is defined but never used.","'chatButton' is assigned a value but never used.","'events' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement"]